/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        Queue<ListNode> minHeap=new PriorityQueue<>((a,b)->a.val-b.val);
        for(ListNode l:lists){
            if(l!=null){
                minHeap.add(l);
            }
        }
        ListNode head=new ListNode(1);
        ListNode ptr=head;
        while(!minHeap.isEmpty()){
            ptr.next=minHeap.poll();
            ptr=ptr.next;
            if(ptr.next!=null){
                minHeap.add(ptr.next);
            }
        }
        return head.next;
    }
}
