class Solution {
    public void ascendingOrder(int nums[]){
        for(int i=0;i<nums.length/2;i++){
            swap(nums,i,nums.length-1-i);
        }
    }
    public void swap(int nums[],int a,int b){
        int temp=nums[a];
        nums[a]=nums[b];
        nums[b]=temp;
    }
    public void sort(int nums[],int a,int b){
        for(int i=b-1;i>=a;i--){
            int flag=0;
            for(int j=a;j<i;j++){
                if(nums[j]>nums[j+1]){
                    swap(nums,j,j+1);
                    flag=1;
                }
            }
            if(flag==0){
                break;
            }
        }
    }
    public void nextPermutation(int[] nums) {
        int peak=-1;
        for(int i=1;i<nums.length;i++){
            if(nums[i]>nums[i-1]){
                peak=i;
            }
        }
        if(peak==-1){
            ascendingOrder(nums);
            return;
        }
        int index=peak;
        for(int i=peak+1;i<nums.length;i++){
            if(nums[peak-1]<nums[i]){
                index=i;
            }
        }
        swap(nums,peak-1,index);
        sort(nums,peak,nums.length);
    }
}
