class MedianFinder {
    PriorityQueue<Integer> small=new PriorityQueue<>(Collections.reverseOrder());
    PriorityQueue<Integer> large=new PriorityQueue<>();
    public MedianFinder() {
        
    }
    
    public void addNum(int num) {
        if(small.size()==0 || small.peek()>num){
            small.offer(num);
        }else{
            large.offer(num);
        }
        if(small.size()>large.size()+1){
            large.offer(small.poll());
        }else if(large.size()>small.size()+1){
            small.offer(large.poll());
        }
    }
    
    public double findMedian() {
        if(small.size()==large.size()){
            return (small.peek()+large.peek())/2.0;
        }else{
            return small.size()>large.size()?small.peek():large.peek();
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
